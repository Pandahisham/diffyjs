(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["diffy"] = factory();
	else
		root["diffy"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.create = undefined;
	
	var _raf = __webpack_require__(2);
	
	var _raf2 = _interopRequireDefault(_raf);
	
	var _capture = __webpack_require__(3);
	
	var _capture2 = _interopRequireDefault(_capture);
	
	var _utils = __webpack_require__(4);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* allow only one instance per webpage */
	var instanceExists = false;
	
	/* version */
	/* eslint-disable no-console */
	
	// import ReadableStream from 'readable-stream';
	var VERSION = '1.0.0';
	
	/* logger instances */
	var onceLog_1 = (0, _utils.createOnceLog)();
	
	/* */
	var currentImageData = null;
	
	/**/
	var previousImageData = null;
	
	/**/
	var $debug = (0, _utils.$)('#diffy-debug');
	
	/**/
	var $toggle = (0, _utils.$)('#diffy-toggle');
	
	/**/
	var $video = (0, _utils.$)('#diffy-video');
	
	/**/
	var $rawCanvas = (0, _utils.$)('#diffy-raw-canvas');
	
	/* */
	var rawCtx = $rawCanvas.getContext('2d');
	
	/* */
	var rawWidth = $rawCanvas.width;
	
	/* */
	var rawHeight = $rawHeight.height;
	
	/* */
	var $blendCanvas = (0, _utils.$)('#diffy-blend-canvas');
	
	/* */
	var blendCtx = $blendCanvas.getContext('2d');
	
	/* */
	var blendWidth = $blendCanvas.width;
	
	/* */
	var blendHeight = $blendCanvas.height;
	
	/* */
	var blendImageData = blendCtx.getImageData(0, 0, blendWidth, blendHeight);
	
	/* */
	var createDebugView = function createDebugView(className) {
	  var container = document.createElement('div');
	  container.className = className;
	  var video = document.createElement('video');
	  video.className = 'debug--video';
	  var rawCanvas = document.createElement('canvas');
	  rawCanvas.className = 'debug--raw-canvas';
	  var blendCanvas = document.createElement('div');
	  blendCanvas.className = 'debug--blend-canvas';
	
	  var header = document.createElement('div');
	  header.className = 'debug--header';
	  var title = document.createElement('h6');
	  title.className = 'debug--title';
	  title.innerText = 'diffy debug view';
	  var toggle = document.createElement('span');
	  toggle.innerText = '-';
	  header.appendChild(toggle);
	  header.appendChild(title);
	
	  container.appendChild(header);
	  container.appendChild(video);
	  container.appendChild(rawCanvas);
	  container.appendChild(blendCanvas);
	
	  document.body.appendChild('container');
	};
	
	/* */
	var toVideo = function toVideo() {};
	
	/* */
	var toCanvas = function toCanvas() {};
	
	/* constraints object for getUserMedia */
	var constraints = {
	  audio: false,
	  video: {
	    width: 260,
	    height: 200
	  }
	};
	
	var create = exports.create = function create(_ref) {
	  var _ref$debug = _ref.debug,
	      debug = _ref$debug === undefined ? false : _ref$debug,
	      _ref$debugViewClassNa = _ref.debugViewClassName,
	      debugViewClassName = _ref$debugViewClassNa === undefined ? 'diffy--debug-view' : _ref$debugViewClassNa,
	      _ref$resolution = _ref.resolution,
	      resolutionX = _ref$resolution.x,
	      resolutionY = _ref$resolution.y;
	
	
	  if (instanceExists) {
	    throw new Error('It seems like an instance of diffy has already been created in this page.');
	  }
	
	  if (!window) {
	    throw new Error('Diffy is meant for use in the browser environment.');
	  }
	
	  if (debug) {
	    createDebugView();
	  }
	
	  instanceExists = true;
	};
	
	exports.default = {
	  VERSION: VERSION,
	  create: create
	};
	
	// export default class Diffy {
	//   constructor(props) {
	//     this.foo = props;
	//     this.stream = new ReadableStream();
	//   }
	
	//   createStream() {
	//     console.log('create stream here');
	//   }
	// }
	
	var loop = function loop() {
	  onceLog_1('Loop is running.');
	  (0, _raf2.default)(loop);
	};
	
	loop();
	
	console.log((0, _capture2.default)(constraints));

/***/ },
/* 2 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/*
	  shim requestAnimationFrame api
	  source: http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/
	*/
	var requestAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {
	  window.setTimeout(callback, 1000 / 60);
	};
	
	exports.default = requestAnimFrame;

/***/ },
/* 3 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/* eslint-disable no-unused-vars */
	/* eslint-disable no-console */
	/*
	  shim getUserMedia with a Promise api
	  source: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia
	*/
	var getUserMedia = function getUserMedia(constraints, successCallback, errorCallback) {
	
	  // First get a hold of getUserMedia, if present
	  var getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
	
	  // Some browsers just don't implement it - return a rejected promise with an error
	  // to keep a consistent interface
	  if (!getUserMedia) {
	    return Promise.reject(new Error('getUserMedia is not implemented in this browser'));
	  }
	
	  // Otherwise, wrap the call to the old navigator.getUserMedia with a Promise
	  return new Promise(function (successCallback, errorCallback) {
	    getUserMedia.call(navigator, constraints, successCallback, errorCallback);
	  });
	};
	
	// Older browsers might not implement mediaDevices at all, so we set an empty object first
	if (navigator.mediaDevices === undefined) {
	  navigator.mediaDevices = {};
	}
	
	// Some browsers partially implement mediaDevices. We can't just assign an object
	// with getUserMedia as it would overwrite existing properties.
	// Here, we will just add the getUserMedia property if it's missing.
	if (navigator.mediaDevices.getUserMedia === undefined) {
	  navigator.mediaDevices.getUserMedia = getUserMedia;
	}
	
	/*
	  capture from camera
	  returns objectUrl
	 */
	var capture = function capture(constraints) {
	  return navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {
	    return window.URL.createObjectURL(stream);
	  }).catch(function (_ref) {
	    var name = _ref.name,
	        message = _ref.message;
	    return console.error(name + ' : ' + message);
	  });
	};
	
	exports.default = capture;

/***/ },
/* 4 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/* eslint-disable no-console */
	
	/*
	  utility function to log only once
	  useful for logging in loops
	*/
	var createOnceLog = exports.createOnceLog = function createOnceLog() {
	  var counter = 0;
	  return function onceLog() {
	    if (counter < 1) {
	      var _console;
	
	      (_console = console).log.apply(_console, arguments);
	    }
	    counter++;
	  };
	};
	
	/*
	  utility function for getting DOM references
	  return DOM Object
	*/
	var $ = exports.$ = function $(selector) {
	  return document.querySelector(selector);
	};
	
	/*
	  bitwise Math.round
	  returns number
	*/
	var round = exports.round = function round(number) {
	  return number + .5 >> 0;
	};

/***/ }
/******/ ])
});
;
//# sourceMappingURL=diffy.min.js.map