{"version":3,"sources":["webpack:///webpack/bootstrap 20b93f76eba0ef812682","webpack:///./src/worker.js","webpack:///./src/utils.js"],"names":["buffer","pixelData","data1","data2","average1","average2","width","height","delta","sensitivity","createDiffBuffer","data","i","Uint32Array","y","x","postMessage","onmessage","createOnceLog","counter","onceLog","log","arguments","$","selector","document","querySelector","round","number","abs","value","polarize","threshold"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACtCA;;AAEA,KAAIA,eAAJ;AACA,KAAIC,kBAAJ;AACA,KAAIC,cAAJ;AACA,KAAIC,cAAJ;AACA,KAAIC,iBAAJ;AACA,KAAIC,iBAAJ;AACA,KAAIC,cAAJ;AACA,KAAIC,eAAJ;AACA,KAAIC,cAAJ;AACA,KAAIC,oBAAJ;;AAEA,KAAMC,mBAAmB,SAAnBA,gBAAmB,OAAoE;AAAA,wBAAjEC,IAAiE;AAAA,OAAzDX,MAAyD,aAAzDA,MAAyD;AAAA,OAAjDE,KAAiD,aAAjDA,KAAiD;AAAA,OAA1CC,KAA0C,aAA1CA,KAA0C;AAAA,OAAnCG,KAAmC,aAAnCA,KAAmC;AAAA,OAA5BC,MAA4B,aAA5BA,MAA4B;AAAA,OAApBE,WAAoB,aAApBA,WAAoB;;AAC3F,OAAIG,IAAI,CAAR;;AAEAX,eAAY,IAAIY,WAAJ,CAAgBb,MAAhB,CAAZ;AACA,QAAK,IAAIc,IAAI,CAAb,EAAgBA,IAAIP,MAApB,EAA4B,EAAGO,CAA/B,EAAkC;AAChC,UAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIT,KAApB,EAA2B,EAAGS,CAA9B,EAAiC;AAC/BH,WAAIE,IAAIR,KAAJ,GAAYS,CAAhB;AACAX,kBAAY,CAACF,MAAMU,IAAI,CAAV,IAAeV,MAAMU,IAAI,CAAJ,GAAQ,CAAd,CAAf,GAAkCV,MAAMU,IAAI,CAAJ,GAAQ,CAAd,CAAnC,IAAuD,CAAxD,GAA6DH,WAAxE;AACAJ,kBAAY,CAACF,MAAMS,IAAI,CAAV,IAAeT,MAAMS,IAAI,CAAJ,GAAQ,CAAd,CAAf,GAAkCT,MAAMS,IAAI,CAAJ,GAAQ,CAAd,CAAnC,IAAuD,CAAxD,GAA6DH,WAAxE;AACAD,eAAQ,qBACN,gBAAIJ,WAAWC,QAAf,CADM,EACoB,IADpB,CAAR;AAGAJ,iBAAUW,CAAV,IACG,OAAS,EAAV,GAAoB;AACnBJ,gBAAS,EADV,GACoB;AACnBA,gBAAU,CAFX,GAEoB;AACnBA,YAJH,CAP+B,CAWT;AACvB;AACF;;AAEDQ,eAAYhB,MAAZ;AACD,EArBD;;AAuBAiB,aAAYP,gBAAZ,C;;;;;;;;;;;ACpCA;;AAEA;;;;AAIO,KAAMQ,wCAAgB,SAAhBA,aAAgB,GAAM;AACjC,OAAIC,UAAU,CAAd;AACA,UAAO,SAASC,OAAT,GAAmB;AACxB,SAAGD,UAAU,CAAb,EAAgB;AAAA;;AACd,4BAAQE,GAAR,iBAAeC,SAAf;AACD;AACDH;AACD,IALD;AAMD,EARM;;AAUP;;;AAGO,KAAMI,gBAAI,SAAJA,CAAI,CAACC,QAAD;AAAA,UAAcC,SAASC,aAAT,CAAuBF,QAAvB,CAAd;AAAA,EAAV;;AAEP;;;AAGO,KAAMG,wBAAQ,SAARA,KAAQ,CAACC,MAAD;AAAA,UAAaA,SAAS,EAAV,IAAiB,CAA7B;AAAA,EAAd;;AAEP;;;AAGO,KAAMC,oBAAM,SAANA,GAAM,CAACC,KAAD;AAAA,UAAW,CAACA,QAASA,SAAS,EAAnB,KAA2BA,SAAS,EAApC,CAAX;AAAA,EAAZ;;AAGP;;;AAGO,KAAMC,8BAAW,SAAXA,QAAW,CAACD,KAAD,EAAQE,SAAR;AAAA,UAAuBF,QAAQE,SAAT,GAAsB,IAAtB,GAA6B,IAAnD;AAAA,EAAjB,C","file":"20b93f76eba0ef812682.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 20b93f76eba0ef812682","import { abs, polarize } from './utils';\n\nlet buffer;\nlet pixelData;\nlet data1;\nlet data2;\nlet average1;\nlet average2;\nlet width;\nlet height;\nlet delta;\nlet sensitivity;\n\nconst createDiffBuffer = ({ data: { buffer, data1, data2, width, height, sensitivity } }) => {\n  let i = 0;\n\n  pixelData = new Uint32Array(buffer);\n  for (let y = 0; y < height; ++ y) {\n    for (let x = 0; x < width; ++ x) {\n      i = y * width + x;\n      average1 = ((data1[i * 4] + data1[i * 4 + 1] + data1[i * 4 + 2]) / 3) / sensitivity;\n      average2 = ((data2[i * 4] + data2[i * 4 + 1] + data2[i * 4 + 2]) / 3) / sensitivity;\n      delta = polarize(\n        abs(average1 - average2), 0x15\n      );\n      pixelData[i] =\n        (255   << 24) |     // alpha\n        (delta << 16) |     // blue\n        (delta <<  8) |     // green\n         delta;             // red\n    }\n  }\n\n  postMessage(buffer);\n};\n\nonmessage = createDiffBuffer;\n\n\n\n// WEBPACK FOOTER //\n// ./src/worker.js","/* eslint-disable no-console */\n\n/*\n  utility function to log only once\n  useful for logging in loops\n*/\nexport const createOnceLog = () => {\n  let counter = 0;\n  return function onceLog() {\n    if(counter < 1) {\n      console.log(...arguments);\n    }\n    counter ++;\n  }\n}\n\n/*\n  utility function to access DOM references\n*/\nexport const $ = (selector) => document.querySelector(selector);\n\n/*\n  bitwise Math.round\n*/\nexport const round = (number) => (number + .5) >> 0;\n\n/*\n  butwise Math.abs\n*/\nexport const abs = (value) => (value ^ (value >> 31)) - (value >> 31);\n\n\n/*\n  polarize pixel values based on value and threshold\n*/\nexport const polarize = (value, threshold) => (value > threshold) ? 0x00 : 0XFF;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js"],"sourceRoot":""}