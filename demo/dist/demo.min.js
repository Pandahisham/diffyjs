/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _diffyMin = __webpack_require__(2);
	
	var diffy = (0, _diffyMin.create)({
	  resolution: { x: 20, y: 15 }
	}); /* eslint-disable no-console */

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	(function webpackUniversalModuleDefinition(root, factory) {
		if (( false ? 'undefined' : _typeof(exports)) === 'object' && ( false ? 'undefined' : _typeof(module)) === 'object') module.exports = factory();else if (true) !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object') exports["diffy"] = factory();else root["diffy"] = factory();
	})(undefined, function () {
		return (/******/function (modules) {
				// webpackBootstrap
				/******/ // The module cache
				/******/var installedModules = {};
				/******/
				/******/ // The require function
				/******/function __webpack_require__(moduleId) {
					/******/
					/******/ // Check if module is in cache
					/******/if (installedModules[moduleId])
						/******/return installedModules[moduleId].exports;
					/******/
					/******/ // Create a new module (and put it into the cache)
					/******/var module = installedModules[moduleId] = {
						/******/exports: {},
						/******/id: moduleId,
						/******/loaded: false
						/******/ };
					/******/
					/******/ // Execute the module function
					/******/modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
					/******/
					/******/ // Flag the module as loaded
					/******/module.loaded = true;
					/******/
					/******/ // Return the exports of the module
					/******/return module.exports;
					/******/
				}
				/******/
				/******/
				/******/ // expose the modules object (__webpack_modules__)
				/******/__webpack_require__.m = modules;
				/******/
				/******/ // expose the module cache
				/******/__webpack_require__.c = installedModules;
				/******/
				/******/ // __webpack_public_path__
				/******/__webpack_require__.p = "/";
				/******/
				/******/ // Load entry module and return exports
				/******/return __webpack_require__(0);
				/******/
			}(
			/************************************************************************/
			/******/[
			/* 0 */
			/***/function (module, exports, __webpack_require__) {
	
				module.exports = __webpack_require__(1);
	
				/***/
			},
			/* 1 */
			/***/function (module, exports, __webpack_require__) {
	
				'use strict';
	
				Object.defineProperty(exports, "__esModule", {
					value: true
				});
				exports.create = undefined;
	
				var _Diffy = __webpack_require__(2);
	
				var _Diffy2 = _interopRequireDefault(_Diffy);
	
				var _raf = __webpack_require__(3);
	
				var _raf2 = _interopRequireDefault(_raf);
	
				var _capture = __webpack_require__(4);
	
				var _capture2 = _interopRequireDefault(_capture);
	
				var _utils = __webpack_require__(5);
	
				function _interopRequireDefault(obj) {
					return obj && obj.__esModule ? obj : { default: obj };
				}
	
				/* eslint-disable no-console */
	
				var create = exports.create = function create(_ref) {
					var resolution = _ref.resolution;
	
					console.log('Create called');
					return _Diffy2.default.create({
						tickFn: _raf2.default,
						captureFn: _capture2.default,
						debug: true,
						resolution: resolution
					});
				};
	
				// /**/
				// const $debug = $('#diffy-debug');
	
				// /**/
				// const $toggle = $('#diffy-toggle');
	
				// /**/
				// const $video = $('#diffy-video');
	
				// /**/
				// const $rawCanvas = $('#diffy-raw-canvas');
	
				// /* */
				// const rawCtx = $rawCanvas.getContext('2d');
	
				// /* */
				// const rawWidth = $rawCanvas.width;
	
				// /* */
				// const rawHeight = $rawHeight.height;
	
				// /* */
				// const $blendCanvas = $('#diffy-blend-canvas');
	
				// /* */
				// const blendCtx = $blendCanvas.getContext('2d');
	
				// /* */
				// const blendWidth = $blendCanvas.width;
	
				// /* */
				// const blendHeight = $blendCanvas.height;
	
				// /* */
				// const blendImageData = blendCtx.getImageData(0, 0, blendWidth, blendHeight);
	
				/***/
			},
			/* 2 */
			/***/function (module, exports) {
	
				'use strict';
	
				Object.defineProperty(exports, "__esModule", {
					value: true
				});
	
				var _createClass = function () {
					function defineProperties(target, props) {
						for (var i = 0; i < props.length; i++) {
							var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
						}
					}return function (Constructor, protoProps, staticProps) {
						if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
					};
				}();
	
				function _classCallCheck(instance, Constructor) {
					if (!(instance instanceof Constructor)) {
						throw new TypeError("Cannot call a class as a function");
					}
				}
	
				var Diffy = function () {
					function Diffy(_ref) {
						var _ref$tickFn = _ref.tickFn,
						    tickFn = _ref$tickFn === undefined ? function () {} : _ref$tickFn,
						    _ref$captureFn = _ref.captureFn,
						    captureFn = _ref$captureFn === undefined ? function () {} : _ref$captureFn,
						    _ref$captureConfig = _ref.captureConfig,
						    captureConfig = _ref$captureConfig === undefined ? {
							audio: false,
							video: {
								width: 130,
								height: 100
							}
						} : _ref$captureConfig,
						    _ref$debug = _ref.debug,
						    debug = _ref$debug === undefined ? false : _ref$debug,
						    _ref$sourceDimensions = _ref.sourceDimensions,
						    sourceDimensions = _ref$sourceDimensions === undefined ? { w: 130, h: 100 } : _ref$sourceDimensions,
						    _ref$onTick = _ref.onTick,
						    onTick = _ref$onTick === undefined ? function (values) {} : _ref$onTick,
						    _ref$onMotion = _ref.onMotion,
						    onMotion = _ref$onMotion === undefined ? function (values) {} : _ref$onMotion,
						    _ref$sensitivity = _ref.sensitivity,
						    sensitivity = _ref$sensitivity === undefined ? 0.5 : _ref$sensitivity,
						    _ref$containerClassNa = _ref.containerClassName,
						    containerClassName = _ref$containerClassNa === undefined ? 'diffy--debug-view' : _ref$containerClassNa,
						    _ref$resolution = _ref.resolution,
						    resolution = _ref$resolution === undefined ? { x: 10, y: 5 } : _ref$resolution;
	
						_classCallCheck(this, Diffy);
	
						this.tickFn = tickFn.bind(window);
						this.captureFn = captureFn;
	
						this.currentImageData = null;
						this.previousImageData = null;
	
						this.resolutionX = resolution.x;
						this.resolutionY = resolution.y;
	
						this.sensitivity = sensitivity;
	
						this.debug = debug;
						this.containerClassName = containerClassName;
	
						this.captureConfig = captureConfig;
	
						this.sourceWidth = sourceDimensions.w;
						this.sourceHeight = sourceDimensions.h;
	
						// console.log('tickFn: ', this.tickFn);
						// console.log('captureFn: ', this.captureFn);
						// console.log('debug: ', this.debug);
						// console.log('className: ', this.containerClassName);
						// console.log('resolution: ', this.resolutionX, this.resolutionY);
	
	
						window.addEventListener('load', this.init.bind(this));
					}
	
					_createClass(Diffy, [{
						key: 'toVideo',
						value: function toVideo(blob, videoEl) {
							// piping blob to video element
							videoEl.src = blob;
						}
					}, {
						key: 'toCanvas',
						value: function toCanvas(video, canvas) {
							// piping video to canvas
							canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height);
						}
					}, {
						key: 'mirror',
						value: function mirror(canvas) {
							var ctx = canvas.getContext('2d');
							ctx.translate(canvas.width, 0);
							ctx.scale(-1, 1);
							return canvas;
						}
					}, {
						key: 'compare',
						value: function compare(frame1, frame2) {
							var length = frame1.length;
							var data1 = frame1.data;
							var data2 = frame2.data;
	
							var buffer = new ArrayBuffer(length);
						}
	
						/*
	       blend two consecutive frames
	       returns imageData
	     */
	
					}, {
						key: 'blend',
						value: function blend(canvas) {
							var ctx = canvas.getContext('2d');
							var width = canvas.width;
							var height = canvas.height;
							this.currentImageData = ctx.getImageData(0, 0, width, height);
							this.previousImageData = this.previousImageData || ctx.getImageData(0, 0, width, height);
							this.compare(currentImageData, previousImageData);
						}
					}, {
						key: 'loop',
						value: function loop() {
							this.toCanvas(this.videoEl, this.rawCanvasEl);
							this.tickFn(this.loop.bind(this));
						}
					}, {
						key: 'init',
						value: function init() {
							var _this = this;
	
							// const loop = this.loop.bind(this);
							console.log('DOM ready. Init...');
							this.createElements(this.containerClassName);
							this.captureFn(this.captureConfig).then(function (blob) {
								[_this.rawCanvasEl, _this.blendCanvasEl].forEach(_this.mirror);
								_this.toVideo(blob, _this.videoEl);
								_this.loop();
							});
						}
					}, {
						key: 'createElements',
						value: function createElements(containerClassName) {
							this.containerEl = document.createElement('div');
							this.containerEl.className = containerClassName;
	
							this.videoEl = document.createElement('video');
							this.videoEl.className = 'debug--video';
							this.videoEl.setAttribute('autoplay', '');
							this.videoEl.width = this.sourceWidth;
							this.videoEl.height = this.sourceHeight;
	
							this.rawCanvasEl = document.createElement('canvas');
							this.rawCanvasEl.className = 'debug--raw-canvas';
							this.rawCanvasEl.width = this.sourceWidth;
							this.rawCanvasEl.height = this.sourceHeight;
	
							this.blendCanvasEl = document.createElement('canvas');
							this.blendCanvasEl.className = 'debug--blend-canvas';
							this.blendCanvasEl.width = this.sourceWidth;
							this.blendCanvasEl.height = this.sourceHeight;
	
							this.headerEl = document.createElement('div');
							this.headerEl.className = 'debug--header';
	
							this.titleEl = document.createElement('h6');
							this.titleEl.className = 'debug--title';
							this.titleEl.innerText = 'Diffy debug view';
	
							this.toggleEl = document.createElement('span');
							this.toggleEl.innerText = '-';
	
							this.headerEl.appendChild(this.toggleEl);
							this.headerEl.appendChild(this.titleEl);
	
							this.containerEl.appendChild(this.headerEl);
							this.containerEl.appendChild(this.videoEl);
							this.containerEl.appendChild(this.rawCanvasEl);
							this.containerEl.appendChild(this.blendCanvasEl);
	
							document.body.appendChild(this.containerEl);
						}
					}], [{
						key: 'create',
						value: function create(options) {
							if (Diffy.instanceExists) {
								throw new Error('It seems a diffy instance\n      already exists on this page.');
							}
	
							return new this(options);
							Diffy.instanceExists = true;
						}
					}, {
						key: 'VERSION',
						get: function get() {
							return '1.0.0';
						}
					}, {
						key: 'instanceExists',
						get: function get() {
							return false;
						},
						set: function set(bool) {
							Diffy.instanceExists = bool;
						}
					}]);
	
					return Diffy;
				}();
	
				exports.default = Diffy;
	
				/***/
			},
			/* 3 */
			/***/function (module, exports) {
	
				"use strict";
	
				Object.defineProperty(exports, "__esModule", {
					value: true
				});
				/*
	     shim requestAnimationFrame api
	     source: http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/
	   */
				var requestAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {
					window.setTimeout(callback, 1000 / 60);
				};
	
				exports.default = requestAnimFrame;
	
				/***/
			},
			/* 4 */
			/***/function (module, exports) {
	
				'use strict';
	
				Object.defineProperty(exports, "__esModule", {
					value: true
				});
				/* eslint-disable no-unused-vars */
				/* eslint-disable no-console */
				/*
	     shim getUserMedia with a Promise api
	     source: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia
	   */
				var getUserMedia = function getUserMedia(constraints, successCallback, errorCallback) {
	
					// First get a hold of getUserMedia, if present
					var getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
	
					// Some browsers just don't implement it - return a rejected promise with an error
					// to keep a consistent interface
					if (!getUserMedia) {
						return Promise.reject(new Error('getUserMedia is not implemented in this browser'));
					}
	
					// Otherwise, wrap the call to the old navigator.getUserMedia with a Promise
					return new Promise(function (successCallback, errorCallback) {
						getUserMedia.call(navigator, constraints, successCallback, errorCallback);
					});
				};
	
				// Older browsers might not implement mediaDevices at all, so we set an empty object first
				if (navigator.mediaDevices === undefined) {
					navigator.mediaDevices = {};
				}
	
				// Some browsers partially implement mediaDevices. We can't just assign an object
				// with getUserMedia as it would overwrite existing properties.
				// Here, we will just add the getUserMedia property if it's missing.
				if (navigator.mediaDevices.getUserMedia === undefined) {
					navigator.mediaDevices.getUserMedia = getUserMedia;
				}
	
				/*
	     capture from camera
	     returns objectUrl
	    */
				var capture = function capture(constraints) {
					return navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {
						return window.URL.createObjectURL(stream);
					}).catch(function (_ref) {
						var name = _ref.name,
						    message = _ref.message;
						return console.error(name + ' : ' + message);
					});
				};
	
				exports.default = capture;
	
				/***/
			},
			/* 5 */
			/***/function (module, exports) {
	
				"use strict";
	
				Object.defineProperty(exports, "__esModule", {
					value: true
				});
				/* eslint-disable no-console */
	
				/*
	     utility function to log only once
	     useful for logging in loops
	   */
				var createOnceLog = exports.createOnceLog = function createOnceLog() {
					var counter = 0;
					return function onceLog() {
						if (counter < 1) {
							var _console;
	
							(_console = console).log.apply(_console, arguments);
						}
						counter++;
					};
				};
	
				/*
	     utility function for getting DOM references
	     return DOM Object
	   */
				var $ = exports.$ = function $(selector) {
					return document.querySelector(selector);
				};
	
				/*
	     bitwise Math.round
	     returns number
	   */
				var round = exports.round = function round(number) {
					return number + .5 >> 0;
				};
	
				/***/
			}
			/******/])
		);
	});
	;
	//# sourceMappingURL=diffy.min.js.map
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)(module)))

/***/ },
/* 3 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ }
/******/ ]);
//# sourceMappingURL=demo.min.js.map